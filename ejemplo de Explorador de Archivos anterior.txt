package exploradordearchivos;

import java.io.*;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.*;
import javax.swing.filechooser.FileSystemView;


/**
 *
 * @author Edwin
 */
public class Explorador extends javax.swing.JFrame {

    DefaultListModel dm=new DefaultListModel();
    
    DefaultListModel clickderecho=new DefaultListModel();
    final JPopupMenu pop=new JPopupMenu();
    String row="";
    int index = 0;
    
    //private JList lista;
    private JTextArea tekst;
    DefaultListModel model;
    
    
    /**
     * Creates new form Explorador
     */
    public Explorador() {
        initComponents();
        
        
        /*explorador = new JList<>(model = new DefaultListModel<String>());
       
       
        getContentPane().setLayout(new BorderLayout());
        getContentPane().add(new JScrollPane(explorador));
        getContentPane().add(btnCarpeta,BorderLayout.SOUTH);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        //setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        
        addPopup();*/
        
      /*  explorador = new JList(new File("C:\\").listFiles());
        explorador.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        explorador.setCellRenderer(new MyCellRenderer());
        explorador.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        explorador.setName("displayList");
        JFrame f = new JFrame("Files In the JList");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setPreferredSize(new Dimension(500, 300));
        explorador.setVisibleRowCount(-1);
        f.add(new JScrollPane(explorador));
        f.pack();
        f.setVisible(true);*/
        
        
     /*   String path = null;
        
        File f = new File(path);
        File[] imgs = f.listFiles();
        JList lista = new JList(imgs);*/ 
        
        /*JList lista = new JList();
        /*DefaultListModel modelo = new DefaultListModel();
        for(int i = 1; i<=10; i++){
            modelo.addElement(i);
        }
        lista.setModel(modelo);*/
        
        
    }
    
    private void agregar(){
        dm.clear();
        
        dm.addElement(new Archivo("Nueva carpeta", new ImageIcon("C:\\Users\\Edwin\\Documents\\Trabajos\\sistemas_operativos_2\\ExploradorDeArchivos\\src\\Imagenes\\cartella2.jpg")));
        dm.addElement(new Archivo("Nueva carpeta", new ImageIcon("C:\\Users\\Edwin\\Documents\\Trabajos\\sistemas_operativos_2\\ExploradorDeArchivos\\src\\Imagenes\\archivo.png")));
        
        explorador.setCellRenderer(new Listado());
        explorador.setModel(dm);
    }
    
    private void populate(String name){
        clickderecho.addElement(name);
        explorador.setModel(clickderecho);
    }
    
    private void addPopup(){
        JMenuItem show = new JMenuItem("Show");
        JMenuItem eliminar = new JMenuItem("Eliminar");
        
        
        pop.add(show);
        pop.add(eliminar);
        
        
        show.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                JOptionPane.showMessageDialog(null, "showed"+row);
            }
        });
        eliminar.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                clickderecho.removeElementAt(index);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPopupMenu3 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        explorador = new javax.swing.JList();
        btnCarpeta = new javax.swing.JButton();
        btnContenido = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        btnArchivo = new javax.swing.JButton();

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exploradordearchivos/delete_file_48.png"))); // NOI18N
        jMenuItem1.setText("EliminarArchivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuItem1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jMenuItem1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPopupMenu3.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exploradordearchivos/restrito.png"))); // NOI18N
        jMenuItem2.setText("EliminarCarpeta");
        jPopupMenu3.add(jMenuItem2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        explorador.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        explorador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exploradorMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exploradorMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(explorador);

        btnCarpeta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cartella.jpg"))); // NOI18N
        btnCarpeta.setText("Nueva Carpeta");
        btnCarpeta.setMaximumSize(new java.awt.Dimension(141, 137));
        btnCarpeta.setMinimumSize(new java.awt.Dimension(141, 137));
        btnCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarpetaActionPerformed(evt);
            }
        });

        btnContenido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contenido.jpg"))); // NOI18N
        btnContenido.setText("Ver Contenido");
        btnContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContenidoActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jTextField1.setText("Este Equipo");

        btnArchivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1.png"))); // NOI18N
        btnArchivo.setText("Nuevo Archivo");
        btnArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCarpeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnContenido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnCarpeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnContenido)
                        .addGap(18, 18, 18)
                        .addComponent(btnArchivo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void btnCarpetaActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
       agregar();
         
    }                                          

    private void btnContenidoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        
    /*String filename = (jTextArea1.getText());
    if (filename.endsWith(".txt")) {
        Scanner inFile1 = new Scanner(filename).useDelimiter(";");
        List<String> temps = new ArrayList<String>();

        // while loop
        while (inFile1.hasNext()) {
            // find next line
            String token1 = inFile1.next();
            temps.add(token1);
        }
        inFile1.close();

        String[] tempsArray = temps.toArray(new String[0]);
        for (String s : tempsArray) {
            System.out.println(s);
        }*/
    }                                            

    private void exploradorMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, explorador.getSelectedValue().toString());
        
        //click derecho select
        explorador.setSelectedIndex(explorador.locationToIndex(evt.getPoint()));
        row=explorador.getSelectedValue().toString();
        index=explorador.getSelectedIndex();
        
        //determine si tiene click derecho
        if(SwingUtilities.isRightMouseButton(evt) && explorador.locationToIndex(evt.getPoint())==index)
        {
            if(! explorador.isSelectionEmpty())
                pop.show(explorador, evt.getX(), evt.getY());
        }
    }                                       

    private void btnArchivoActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        /*JFileChooser fc = new JFileChooser();
        fc.setMultiSelectionEnabled(true);
        fc.showOpenDialog(new JFrame());
        File[] selectedFiles = fc.getSelectedFiles();
        for(File f : selectedFiles){
            model.addElement(f.getName());
        }*/
        
        //populate(explorador.getSelectedIndices().toString());
    }                                          

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void exploradorMouseReleased(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        jPopupMenu3.show(this, evt.getX(), evt.getY());
    }                                        

    private void jMenuItem1AncestorAdded(javax.swing.event.AncestorEvent evt) {                                         
        // TODO add your handling code here:
       // this.dispose();
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Explorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Explorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Explorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Explorador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Explorador().setVisible(true);
                
            }
        });
    }
    
     private static class MyCellRenderer extends DefaultListCellRenderer  {

        private static final long serialVersionUID = 1L;

        @Override
        public Component getListCellRendererComponent(JList list, Object value,
                int index, boolean isSelected, boolean cellHasFocus) {
            if (value instanceof File) {
                File file = (File) value;
                setText(file.getName());
                setIcon(FileSystemView.getFileSystemView().getSystemIcon(file));
                if (isSelected) {
                    setBackground(list.getSelectionBackground());
                    setForeground(list.getSelectionForeground());
                } else {
                    setBackground(list.getBackground());
                    setForeground(list.getForeground());
                }
                setEnabled(list.isEnabled());
                setFont(list.getFont());
                setOpaque(true);
            }
            return this;
        }
    }