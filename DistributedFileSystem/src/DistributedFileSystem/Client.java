package DistributedFileSystem;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.tree.DefaultMutableTreeNode;
/**
 *
 * @author Andres
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public Client() throws NotBoundException  {
        initComponents();
        cargarArbol();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupmenuDirectorio = new javax.swing.JPopupMenu();
        createFolderMenu = new javax.swing.JMenuItem();
        createFileMenuu = new javax.swing.JMenuItem();
        deleteFolderMenu = new javax.swing.JMenuItem();
        popupmenuArchivo = new javax.swing.JPopupMenu();
        deleteFileMenu = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myDirectoryTree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        popupmenuDirectorio.setBackground(new java.awt.Color(0, 0, 0));
        popupmenuDirectorio.setForeground(new java.awt.Color(255, 255, 255));

        createFolderMenu.setText("Create Folder");
        createFolderMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFolderMenuActionPerformed(evt);
            }
        });
        popupmenuDirectorio.add(createFolderMenu);

        createFileMenuu.setText("Create File");
        createFileMenuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFileMenuuActionPerformed(evt);
            }
        });
        popupmenuDirectorio.add(createFileMenuu);

        deleteFolderMenu.setText("Delete");
        deleteFolderMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFolderMenuActionPerformed(evt);
            }
        });
        popupmenuDirectorio.add(deleteFolderMenu);

        popupmenuArchivo.setBackground(new java.awt.Color(0, 0, 0));
        popupmenuArchivo.setForeground(new java.awt.Color(255, 255, 255));

        deleteFileMenu.setText("Delete");
        deleteFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFileMenuActionPerformed(evt);
            }
        });
        popupmenuArchivo.add(deleteFileMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DFS - David Cruz, Edwin Nunez, Juan Andres Diaz");
        setBackground(new java.awt.Color(255, 204, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 153));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "File Directory", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Emoji", 0, 18))); // NOI18N

        myDirectoryTree.setBackground(new java.awt.Color(255, 255, 204));
        myDirectoryTree.setBorder(new javax.swing.border.MatteBorder(null));
        myDirectoryTree.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Root");
        myDirectoryTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        myDirectoryTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myDirectoryTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(myDirectoryTree);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Scala Sans SC", 1, 48)); // NOI18N
        jLabel1.setText("Distributed File System");

        jButton1.setBackground(new java.awt.Color(255, 255, 204));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DistributedFileSystem/refresh.png"))); // NOI18N
        jButton1.setToolTipText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DistributedFileSystem/folder.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButton2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myDirectoryTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myDirectoryTreeMouseClicked
        // TODO add your handling code here:
        if(evt.isMetaDown()){
            int row = myDirectoryTree.getClosestRowForLocation(evt.getX(), evt.getY());
            myDirectoryTree.setSelectionRow(row);
            Object v1 = myDirectoryTree.getSelectionPath().getLastPathComponent();
            nodo_seleccionado2 = (DefaultMutableTreeNode)v1;
            
            
            if (nodo_seleccionado2.getUserObject() instanceof TreeNode){
                seleccionado = (TreeNode)nodo_seleccionado2.getUserObject();
                if(seleccionado.getType() == 'a')
                    popupmenuArchivo.show(evt.getComponent(), evt.getX(), evt.getY());
                else
                    popupmenuDirectorio.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_myDirectoryTreeMouseClicked

    private void createFolderMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFolderMenuActionPerformed
        // TODO add your handling code here:
        String nombre = "";
        nombre = JOptionPane.showInputDialog("Name: ");
        try {
            mensaje.createFolder(((TreeNode)nodo_seleccionado2.getUserObject()).getNodename()+"/"+nombre,nodo_seleccionado2);
            cargarArbol();
        } catch (RemoteException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_createFolderMenuActionPerformed

    private void createFileMenuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFileMenuuActionPerformed
        // TODO add your handling code here:
      JTextField nameField = new JTextField(5);
      JTextArea contentField = new JTextArea(10,25);

      JPanel myPanel = new JPanel();
      myPanel.setLayout(new BoxLayout(myPanel, BoxLayout.Y_AXIS));
      myPanel.add(new JLabel("Filename:"));
      myPanel.add(nameField);      
      myPanel.add(new JLabel("Text:"));
      myPanel.add(contentField);

      int result = JOptionPane.showConfirmDialog(null, myPanel, 
               "New_file", JOptionPane.OK_CANCEL_OPTION);
      if (result == JOptionPane.OK_OPTION) {
          try {
            mensaje.createFile(((TreeNode)nodo_seleccionado2.getUserObject()).getNodename()+"/"+nameField.getText(),contentField.getText(),nodo_seleccionado2);
            cargarArbol();
        } catch (RemoteException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
    }//GEN-LAST:event_createFileMenuuActionPerformed

    private void deleteFolderMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFolderMenuActionPerformed
        // TODO add your handling code here:
        try {
            mensaje.deleteFolder(seleccionado.getNodename(),nodo_seleccionado2);
            cargarArbol();
        } catch (RemoteException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteFolderMenuActionPerformed

    private void deleteFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFileMenuActionPerformed
        // TODO add your handling code here:
        try {
            mensaje.deleteFile(seleccionado.getNodename(),nodo_seleccionado2);
            cargarArbol();
        } catch (RemoteException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteFileMenuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            cargarArbol();
        } catch (NotBoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Client().setVisible(true);
                } catch (NotBoundException ex) {
                    Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem createFileMenuu;
    private javax.swing.JMenuItem createFolderMenu;
    private javax.swing.JMenuItem deleteFileMenu;
    private javax.swing.JMenuItem deleteFolderMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree myDirectoryTree;
    private javax.swing.JPopupMenu popupmenuArchivo;
    private javax.swing.JPopupMenu popupmenuDirectorio;
    // End of variables declaration//GEN-END:variables
  private DefaultMutableTreeNode nodo_seleccionado2;
  private TreeNode seleccionado;
  Registry repositorio;
  ServerNode mensaje;
  
  public void cargarArbol()throws NotBoundException {
      try {
            repositorio = LocateRegistry.getRegistry("192.168.1.8", 1099);
            mensaje = (ServerNode)repositorio.lookup("ServerNode");
            myDirectoryTree.setModel(mensaje.getFileSystem());
            
        } catch (RemoteException ex) {        
        }
  }
}
